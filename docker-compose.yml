version: "3.5"

services:
  api1: &api
    build: 
      context: .
      dockerfile: Dockerfile
    hostname: api1
    depends_on:
      - db
    network_mode: host
    expose:
      - 3000
    environment:
      API_PORT: 3000
      DB_HOST: localhost
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "30MB"

  api2:
    <<: *api
    hostname: api2
    expose:
      - 3001
    environment:
      API_PORT: 3001
      DB_HOST: localhost
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "30MB"
  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999" 
    network_mode: host
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "50MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    network_mode: host
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "440MB"

